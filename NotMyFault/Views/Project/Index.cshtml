@model ProjectViewModel

<script src="~/Javascript/ProjectDisplaySetting.js"></script>
<script src="~/Javascript/signalr-client-1.0.0-alpha2-final.min.js"></script>
<script>
    var userId = '@Model.CurrentUser.Id';
    var projId = '@Model.Proj.ProjectId';
    var userNickName = '@Model.CurrentUser.NickName';
    var CurrentDevIsInvolved = '@Model.CurrentDevIsInvolved';
    var groupName_interConver = projId;
    var groupName_negoConver = projId + '-' + userId;
</script>

@if (@Model.CurrentUser.Role == UserRole.Dev)
{
    <a asp-controller="Dev" asp-action="Index">Home</a>
    if (Model.HasAnyNegosToLookat && Model.Proj.ProjStatus != ProjStatus.Aborted)
    {
        <font>&nbsp;|</font>
        <a asp-controller="Project" asp-action="TalkToBuyers" asp-route-projId="@Model.Proj.ProjectId">Talk to investors</a>
    }
    if (Model.HasOffers && Model.Proj.ProjStatus != ProjStatus.Aborted)
    {
        <font>&nbsp;|</font>
        <a asp-controller="Transaction" asp-action="SeeOffers" asp-route-projId="@Model.Proj.ProjectId">See my offers</a>
    }
}
else
{<a asp-controller="Buyer" asp-action="Index">Home</a>}


@if (Model.CurrentUser == Model.ProjLeader && Model.Proj.ProjStatus != ProjStatus.Aborted)
{
    <font>&nbsp;|</font>
    <a asp-controller="Project" asp-action="UpdateProject" asp-route-id="@Model.Proj.ProjectId">Update project</a>
    <font>&nbsp;|</font>
    <a asp-controller="Recruit" asp-action="CreateRecruit" asp-route-ProjId="@Model.Proj.ProjectId">Recruit people</a>
    if (Model.HasOpenRecruits)
    {
        <font>&nbsp;|</font>
        <a asp-controller="Recruit" asp-action="ListRecruits" asp-route-ProjId="@Model.Proj.ProjectId">My open recruitments</a>
    }
}
else if (Model.HasOpenRecruits && Model.CurrentDevIsInvolved && Model.Proj.ProjStatus != ProjStatus.Aborted)
{
    <font>&nbsp;|</font>
    <a asp-controller="Recruit" asp-action="ListRecruits" asp-route-ProjId="@Model.Proj.ProjectId">Open recruitments</a>
}

<h1>Project @Model.Proj.ProjName</h1>
@Model.Proj.BriefDescript
<br>
We currently have @Model.Capacity developers working on it
<br>
This project was started on @Model.Proj.StartingDate.ToString("dd/MM/yyy") and we have completed @Model.Proj.Progress%. The projected complete date is @Model.Proj.ProtdCompDate.ToString("dd/MM/yyy").
<br>
This project is currently
@switch (Model.Proj.ProjStatus)
{
    case ProjStatus.Aborted:
        <font>Aborted</font>
        break;

    case ProjStatus.Development_Completed:
        <font>Development completed</font>
        break;

    case ProjStatus.Preparing:
        <font>Preparing</font>
        break;

    case ProjStatus.Recruiting:
        <font>Recruiting</font>
        break;

    case ProjStatus.Suspended:
        <font>Suspended</font>
        break;

    case ProjStatus.Under_Development:
        <font>Under Development</font>
        break;
}

@switch (Model.Proj.TradingStatus)
{
    case ProjStatus.Under_Negotiation:
        <font> and Under negotiation</font>
        break;

    case ProjStatus.Under_Offer:
        <font> and Under offer</font>
        break;

    case ProjStatus.In_Trade:
        <font> and In trade</font>
        break;

    case ProjStatus.Traded:
        <font> and Traded</font>
        break;
}

@if (Model.Valuation.BitcoinValue != 0 || Model.Valuation.EthereumValue != 0 || Model.Valuation.LitecoinValue != 0)
{
    <br>
    <font> Developers are expecting either:</font>
}
@if (Model.Valuation.BitcoinValue != 0)
{
    <br>
    <font>&nbsp;&nbsp;&nbsp;&nbsp;Bitcoin: @Model.Valuation.BitcoinValue</font>
}
@if (Model.Valuation.EthereumValue != 0)
{
    <br>
    <font>&nbsp;&nbsp;&nbsp;&nbsp;Ethereum: @Model.Valuation.EthereumValue</font>
}
@if (Model.Valuation.LitecoinValue != 0)
{
    <br>
    <font>&nbsp;&nbsp;&nbsp;&nbsp;Litecoin: @Model.Valuation.LitecoinValue</font>
}
<br>
Developers are:
@foreach (var dev in Model.MyDevs)
{
    @if (@Model.CurrentUser.Role == UserRole.Dev)
    {
        <a asp-controller="Dev" asp-action="ViewDevProfile" asp-route-id="@dev.Id">@dev.NickName</a>
        if (Model.CurrentUser == Model.ProjLeader && Model.CurrentUser != dev)
        {
            <a asp-controller="Project" asp-action="DismissADev" asp-route-id="@Model.Proj.ProjectId" asp-route-devId="@dev.Id">(dismiss)</a>
        }
        <font>&nbsp;&nbsp;</font>
    }
    else
    {
        <font>@dev.NickName&nbsp;</font>
    }
}
<br>
    Project leader is
@if (@Model.CurrentUser.Role == UserRole.Dev)
{
    <a asp-controller="Dev" asp-action="ViewDevProfile" asp-route-id="@Model.ProjLeader.Id">@Model.ProjLeader.NickName&nbsp;</a>
}
else
{
    <font>@Model.ProjLeader.NickName &nbsp;</font>
}
@if (Model.CurrentDevIsInvolved)
{
    <br>
    <font>Our work repository is @Model.Proj.RepoLink</font>
    <br>
}
<br>
<font id="notInvolved1" style="display:none">Project full description: @Model.Proj.FullDescript</font>
    Followed by @Model.NumOfFollowers users
    <br>
    Likes: @Model.NumOfLikes
    <br>
    Watched by: @Model.NumOfWatchers investors

    <div id="notInvolved2" style="display:none">
        <br>
        <br>
        @if (@Model.CurrentUserHasLiked)
    {<font>Liked</font>}
else
{
    <form asp-controller="Project" asp-action="Like" asp-route-projId="@Model.Proj.ProjectId" method="post" role="form">
        <input type="submit" value="Like" />
    </form>
}

@if (@Model.CurrentUserHasFollowed)
{
    <form asp-controller="Project" asp-action="Unfollow" asp-route-projId="@Model.Proj.ProjectId" method="post" role="form">
        <input type="submit" value="Unfollow" />
    </form>
}
else
{
    <form asp-controller="Project" asp-action="Follow" asp-route-projId="@Model.Proj.ProjectId" method="post" role="form">
        <input type="submit" value="Follow" />
    </form>
}
@if (@Model.CurrentUser.Role == UserRole.Buyer)
{
    if (@Model.CurrentBuyerHasWatched)
    {
        <form asp-controller="Project" asp-action="Unwatch" asp-route-projId="@Model.Proj.ProjectId" method="post" role="form">
            <input type="submit" value="Unwatch" />
        </form>
        <br>
        <br>
        <font>Talk to developers</font>
        @Html.Partial("_Conversation", @Model.PreviousNegoConver)
        <script src="~/Javascript/SingalR_NegoConver.js"></script>
        <br>
        <br>
        if (Model.Proj.TradingStatus == ProjStatus.In_Trade)
        {
        <font>This project is in trade</font>
        }
        else
        {
        <a asp-controller="Transaction" asp-action="MakeAnOffer" asp-route-projId="@Model.Proj.ProjectId" asp-route-buyerId="@Model.CurrentUser.Id">Make an offer</a>
        }
    }
    else
    {
    <form asp-controller="Project" asp-action="Watch" asp-route-projId="@Model.Proj.ProjectId" method="post" role="form">
        <input type="submit" value="Watch" />
    </form>
    }
}
</div>
<br>
<br>
@if (Model.CurrentDevIsInvolved)
{
    <font>Internal communication</font>
    @Html.Partial("_Conversation", @Model.PreviousInterConver)
    <script src="~/Javascript/SingalR_InterConver.js"></script>
}

