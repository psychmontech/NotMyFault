@model ProjectViewModel

<script type="text/javascript">
    window.onload = function IsCurrentDevInvolvedCheck()
    {
        if ('@(Model.CurrentDevIsInvolved)' === '@true')
        {
            document.getElementById('involved1').style.display = 'block';
            document.getElementById('involved2').style.display = 'block';
            document.getElementById('notInvolved1').style.display = 'none';
            document.getElementById('notInvolved2').style.display = 'none';
        }
        else
        {
            document.getElementById('notInvolved1').style.display = 'block';
            document.getElementById('notInvolved2').style.display = 'block';
            document.getElementById('involved1').style.display = 'none';
            document.getElementById('involved2').style.display = 'none';
        }
    }
</script>

<script src="~/Javascript/signalr-client-1.0.0-alpha2-final.min.js"></script>

@if (@Model.CurrentUser.Role == UserRole.Dev)
{
    <a asp-controller="Dev" asp-action="Index">Home</a>
    if (Model.HasAnyNegos)
    {
        <font>&nbsp;|</font>
        <a asp-controller="Project" asp-action="TalkToBuyers" asp-route-projId="@Model.Proj.ProjectId">Talk to investors</a>
    }
}
else
{<a asp-controller="Buyer" asp-action="Index">Home</a>}


@if (Model.CurrentUser == Model.ProjLeader)
{
    <font>&nbsp;|</font>
    <a asp-controller="Project" asp-action="UpdateProject" asp-route-id="@Model.Proj.ProjectId">Update project</a>
    <font>&nbsp;|</font>
    <a asp-controller="Recruit" asp-action="CreateRecruit" asp-route-ProjId="@Model.Proj.ProjectId">Recruit people</a>
    if (Model.HasOpenRecruits)
    {
        <font>&nbsp;|</font>
        <a asp-controller="Recruit" asp-action="ListRecruits" asp-route-ProjId="@Model.Proj.ProjectId">My open recruitments</a>
    }
}
else if (Model.HasOpenRecruits)
{
    <font>&nbsp;|</font>
    <a asp-controller="Recruit" asp-action="ListRecruits" asp-route-ProjId="@Model.Proj.ProjectId">Open recruitments</a>
}

<h1>Project @Model.Proj.ProjName</h1>
@Model.Proj.BriefDescript
<br>
We currently have @Model.Capacity developers working on it
<br>
This project was started on @Model.Proj.StartingDate.ToString("dd/MM/yyy") and we have completed @Model.Proj.Progress%. The complete date is @Model.Proj.ProtdCompDate.ToString("dd/MM/yyy").
This project is currently
@switch (Model.Proj.Status)
{
    case ProjStatus.Aborted:
        <font>Abort</font>
        break;

    case ProjStatus.Completed:
        <font>Complelted</font>
        break;

    case ProjStatus.Preparing:
        <font>Preparing</font>
        break;

    case ProjStatus.Recruiting:
        <font>Recruiting</font>
        break;

    case ProjStatus.Suspended:
        <font>Suspended</font>
        break;

    case ProjStatus.Transaction_Processing:
        <font>Transaction Processing</font>
        break;

    case ProjStatus.Under_Development:
        <font>Under Development</font>
        break;

    case ProjStatus.Under_Negotiation:
        <font>Under Negotiation</font>
        break;
}

<br>
This project is evaluated at $@Model.Proj.Valuation
<br>
Developers are:
@foreach (var Dev in Model.MyDevs)
{
    @if (@Model.CurrentUser.Role == UserRole.Dev)
    {
        <a asp-controller="Dev" asp-action="ViewDevProfile" asp-route-id="@Dev.Id">@Dev.NickName</a>
        <font>&nbsp;</font>
    }
    else
    {
        <font>@Dev.NickName&nbsp;</font>
    }
}
<br>
Project leader is
@if (@Model.CurrentUser.Role == UserRole.Dev)
{
    <a asp-controller="Dev" asp-action="ViewDevProfile" asp-route-id="@Model.ProjLeader.Id">@Model.ProjLeader.NickName&nbsp;</a>
}
else
{
    <font>@Model.ProjLeader.NickName&nbsp;</font>
}
@if (Model.CurrentDevIsInvolved)
{
    <br>
    <font>Our work repository is @Model.Proj.RepoLink</font>
    <br>
}
<br>
<br>
<font id="notInvolved1" style="display:none">Project full description: @Model.Proj.FullDescript</font>
<br>
Followed by @Model.NumOfFollowers users
<br>
Likes: @Model.NumOfLikes
<br>
Watched by: @Model.NumOfWatchers investors
<div id="notInvolved2" style="display:none">
    <br>
    <br>
    @if (@Model.CurrentUserHasLiked)
    { <font>Liked</font>}
    else
    {
        <form asp-controller="Project" asp-action="Like" asp-route-projId="@Model.Proj.ProjectId" method="post" role="form">
            <input type="submit" value="Like" />
        </form>
    }

    @if (@Model.CurrentUserHasFollowed)
    {
        <form asp-controller="Project" asp-action="Unfollow" asp-route-projId="@Model.Proj.ProjectId" method="post" role="form">
        <input type="submit" value="unfollow" />
        </form>
    }
    else
    {
        <form asp-controller="Project" asp-action="Follow" asp-route-projId="@Model.Proj.ProjectId" method="post" role="form">
            <input type="submit" value="Follow" />
        </form>
    }
    @if (@Model.CurrentUser.Role == UserRole.Buyer)
    {
        if (@Model.CurrentBuyerHasWatched)
        {
            <form asp-controller="Project" asp-action="Unwatch" asp-route-projId="@Model.Proj.ProjectId" method="post" role="form">
                <input type="submit" value="unwatch" />
            </form>
            <br>
            <br>
            //***************************************************************
            <font>Talk to developers</font>
            <div>
                <textarea rows="15" cols="30" id="display_nego">@Model.PreviousNegoConver</textarea>
                <br>
                <br>
                <input id="text_nego" />
                <br>
                <br>
                <input type="button" value="send" id="sendBtn_nego" onclick="GroupMessage()" />
            </div>
            <script type="text/javascript">
                let connection = new signalR.HubConnection('/negoHub'),
                    userId = '@Model.CurrentUser.Id',
                    groupName = '@Model.Proj.ProjectId' + '-' + userId,
                    projId = '@Model.Proj.ProjectId',
                    userNickName = '@Model.CurrentUser.NickName',
                    input = document.getElementById('text_nego'),
                    sendBtn = document.getElementById('sendBtn_nego'),
                    display = document.getElementById('display_nego'),
                    newLine = '&#13;&#10;';

                connection.on('Send', data =>
                {
                    var DisplayMessagesDiv = display;
                    DisplayMessagesDiv.innerHTML += data + newLine;
                    display.scrollTop = display.scrollHeight;
                });

                connection.start().then(() => connection.invoke('JoinGroup', groupName, userNickName));
                window.onbeforeunload = function LeaveGroup()
                {
                    connection.invoke('LeaveGroup', groupName, userNickName);
                }

                function GroupMessage()
                {
                    var msg = input.value;
                    connection.invoke('SendToGroup', groupName, msg, projId, userId, userNickName);
                    input.value = null;
                }

                input.onkeypress = function (e)
                {
                    if (e.keyCode == 13)
                        sendBtn.click();
                };
            </script>
            //***************************************************************
        }
        else
        {
            <form asp-controller="Project" asp-action="Watch" asp-route-projId="@Model.Proj.ProjectId" method="post" role="form">
                <input type="submit" value="Watch" />
            </form>
        }
    }
</div>
<br>
<br>
@if (Model.CurrentDevIsInvolved)
{
    <font>Internal communication</font>
    <div>
        <textarea rows="15" cols="30" id="display_interDev">@Model.PreviousInterConver</textarea>
        <br>
        <br>
        <input id="text_interDev" />
        <br>
        <br>
        <input type="button" value="send" id="sendBtn_interDev" onclick="GroupMessage()" />
    </div>
    <script type="text/javascript">
        let connection = new signalR.HubConnection('/devsHub'),
            groupName = '@Model.Proj.ProjectId',
            projId = '@Model.Proj.ProjectId',
            userId = '@Model.CurrentUser.Id',
            userNickName = '@Model.CurrentUser.NickName',
            input = document.getElementById("text_interDev"),
            sendBtn = document.getElementById('sendBtn_interDev'),
            display = document.getElementById('display_interDev'),
            newLine = '&#13;&#10;';

        connection.on('Send', data =>
        {
            var DisplayMessagesDiv = display;
            DisplayMessagesDiv.innerHTML += data + newLine;
            display.scrollTop = display.scrollHeight;
        });

        connection.start().then(() => connection.invoke('JoinGroup', groupName, userNickName));
        window.onbeforeunload = function LeaveGroup() 
        {
            connection.invoke('LeaveGroup', groupName, userNickName);
        }

        function GroupMessage()
        {
            var msg = input.value;
            connection.invoke('SendToGroup', groupName, msg, projId, userId, userNickName);
            input.value = null;
        }

        input.onkeypress = function (e)
        {
            if (e.keyCode == 13)
                sendBtn.click();
        };
    </script>

}

